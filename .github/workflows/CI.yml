name: CI
permissions:
  contents: write
  id-token: write
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build-with-docker:
    name: ${{ matrix.settings.name }} archtitecture
    runs-on: ${{ matrix.settings.runner }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - name: Linux GNU arm64
            runner: ubuntu-latest
            platform: linux/arm64
            target: aarch64-unknown-linux-gnu
            filename: hashtree.linux-arm64-gnu.node
          # Node does not support aarch64-linux-musl
          # - arch: Linux MUSL arm64
          #   runner: ubuntu-latest
          #   platform: linux/arm64
          #   target: aarch64-unknown-linux-musl
          #   filename: hashtree.linux-arm64-musl.node
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.settings.platform }}

      - name: Build Binding, Run Tests and Copy Build Artifact to Host
        run: |
          docker buildx build \
            --load \
            --platform ${{ matrix.settings.platform }} \
            --build-arg NODE_VERSION=20 \
            -t hashtree-temp:${{ matrix.settings.target }} \
            --progress=plain .
          docker create \
            --name temp-container \
            hashtree-temp:${{ matrix.settings.target }}
          docker cp temp-container:/usr/src/hashtree-js/${{ matrix.settings.filename }} .

      - name: Upload binding.node
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: binding-${{ matrix.settings.target }}
          path: "*.node"
          if-no-files-found: error
          retention-days: 1

  build:
    name: ${{ matrix.settings.arch }} archtitecture
    runs-on: ${{ matrix.settings.runner }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          # https://napi.rs/docs/cli/artifacts
          # https://github.com/actions/runner-images

          # OSX x86 is not supported by the assembly yet.  @potuz is aware
          # - arch: Mac x86
          #   runner: macos-13
          #   target: x86_64-apple-darwin
          - arch: Mac arm64
            runner: macos-latest
            target: aarch64-apple-darwin

          - arch: Linux GNU x86
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          # Cross-compiling works but need to figure out musl env to run tests
          # the index.js looks for musl env and selects correct binary
          # - arch: Linux MUSL x86
          #   runner: ubuntu-latest
          #   target: x86_64-unknown-linux-musl

          # TODO: (@matthewkeil) Error in windows linking but works fine in base repo. Need to debug
          # - arch: Windows x86
          #   runner: windows-latest
          #   target: x86_64-pc-windows-msvc
          # - arch: Windows arm64
          #   runner: windows-latest
          #   target: aarch64-pc-windows-msvc
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}

      - uses: goto-bus-stop/setup-zig@v2
        if: ${{ matrix.settings.requires_zig }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install Dependencies
        shell: bash
        run: yarn

      - name: Sanity Check
        working-directory: hashtree
        run: cargo build --release --target ${{ matrix.settings.target }}

      - name: Build
        shell: bash
        run: yarn build --target ${{ matrix.settings.target }}

      - name: Test
        run: yarn test

      - name: Upload binding.node
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: binding-${{ matrix.settings.target }}
          path: "*.node"
          if-no-files-found: error
          retention-days: 1

  publish:
    name: Publish
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - build
      - build-with-docker

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Create tag
        id: tag
        uses: butlerlogic/action-autotag@1.1.2
        with:
          strategy: package
          tag_prefix: "v"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Exit if no version change
        if: steps.tag.outputs.tagcreated == 'no'
        uses: actions/github-script@v3
        with:
          script: core.setFailed('The package.json version did not change. Workflow will not create a release.')    

      - name: Install dependencies
        run: yarn install
          
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move Artifacts
        run: yarn artifacts

      - name: List packages
        run: ls -R ./npm
        shell: bash

      - name: Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set provenance true
          if git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --access public
          elif git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --tag next --access public
          else
            echo "Not a release, skipping publish"
          fi
